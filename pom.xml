<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.hid4java</groupId>
  <artifactId>hid4java</artifactId>
  <version>0.14.4v</version>

  <name>hid4java</name>
  <description>A cross-platform Java Native Access (JNA) wrapper for the libusb/hidapi library</description>
  <url>https://github.com/umjammer/hid4java</url>
  <inceptionYear>2014</inceptionYear>
  <developers>
    <developer>
      <name>Gary Rowe</name>
      <email>g.rowe@froot.co.uk</email>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>MIT</name>
      <url>https://www.opensource.org/licenses/mit-license.php</url>
      <distribution>repo</distribution>
      <comments>All source code is under the MIT license.</comments>
    </license>
  </licenses>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/umjammer/hid4java/issues</url>
  </issueManagement>
  <scm>
    <connection>scm:git:git@github.com:umjammer/hid4java.git</connection>
    <developerConnection>scm:git:git@github.com:umjammer/hid4java.git</developerConnection>
    <url>git@github.com:umjammer/hid4java.git</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Nexus Release Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
    <jinput.groupId>com.github.umjammer.jinput</jinput.groupId> <!-- net.java.jinput / com.github.umjammer.jinput -->
    <jinput.version>2.0.14v</jinput.version>
  </properties>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <release>17</release>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.1.2</version>
        <configuration>
          <excludes>
            <exclude>**/*FunctionalTest.java</exclude>
          </excludes>
          <argLine>
            -Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties
          </argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.5.0</version>
        <configuration>
          <doclint>none</doclint>
          <locale>EN</locale>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.1</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <mavenExecutorId>forked-path</mavenExecutorId>
        </configuration>
      </plugin>

      <!-- Generates a META/MANIFEST.MF file to assist programmatic library version (see #69)-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.10.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>${jinput.groupId}</groupId>
      <artifactId>osx-plugin</artifactId>
      <version>${jinput.version}</version>
    </dependency>
    <dependency>
      <groupId>${jinput.groupId}</groupId>
      <artifactId>linux-plugin</artifactId>
      <version>${jinput.version}</version>
    </dependency>
    <dependency>
      <groupId>${jinput.groupId}</groupId>
      <artifactId>windows-plugin</artifactId>
      <version>${jinput.version}</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-commons</artifactId>
      <version>1.1.9</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <!-- mvn -P jnaerator jnaerator:generate -->
      <id>jnaerator</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.nativelibs4java</groupId>
            <artifactId>maven-jnaerator-plugin</artifactId>
            <version>0.12</version>
            <executions>
              <execution>
                <goals>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <javaOutputDirectory>${project.build.testSourceDirectory}</javaOutputDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
